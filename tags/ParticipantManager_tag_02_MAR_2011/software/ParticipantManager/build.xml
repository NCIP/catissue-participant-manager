<?xml version ="1.0"?>

	<!--Ant Script for create Build for DAO -->
<project name="ParticipantManager" default="compile" xmlns:ivy="antlib:org.apache.ivy.ant">
	<property name="base.dir" value="." />
	<property name="software.dir" value=".."/>
	<property name="lib.dir" value="${base.dir}/src/lib" />
	<property name="build.dir" value="${base.dir}/build" />
	<property name="src.dir" value="${base.dir}/src/java" />
	<property name="wc.jar.details" value="Partiicpant Manager" />
	<property name="wc.jar.version" value="1.0" />
	<property name="wc.jar.creator" value="Virender" />
	<property name="temp.src.classes.dir" value="${software.dir}/target/temp/src/classes"/>
	<property name="local-ivy-repo.dir" value="${software.dir}/local-ivy-repo"/>

	<loadfile property="dist.revision" srcFile="./.svn/entries">
				<filterchain>
					<headfilter lines="1" skip="4"/>
				</filterchain>
	</loadfile>

	<target name="compile" depends="init,retrieve-ivy-files">
		<echo> Compiling Participant Manager source code : </echo>
		<javac destdir="${temp.src.classes.dir}" includes="**/*.*" debug="on"
			includeAntRuntime="false" target="1.5">
			<src path="${src.dir}" />
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="*.jar" />
				</fileset>
			</classpath>
		</javac>
	</target>
	<!-- sub tasks -->

	<target name="init">
			<echo>Initializing necessary parameters : </echo>
			<!-- Create the time stamp -->
			<tstamp />
			<!-- Create the build directory structure used by compile -->
			<delete dir="${temp.src.classes.dir}" />
			<mkdir dir="${temp.src.classes.dir}"/>
	</target>

	<target name="build_jar" depends="compile">
		<echo>Building Participant Manager project jar : </echo>

		<jar taskname="build_jar" jarfile="${local-ivy-repo.dir}/ParticipantManager.jar">
			<fileset dir="${temp.src.classes.dir}">
				<include name="**/*" />
			</fileset>
			<manifest>
				<section name="${wc.jar.details}">
			  		<attribute name="Version" value="${wc.jar.version}" />
                    <attribute name="Built-By" value="${user.name}" />
                    <attribute name="Build-on" value="${TODAY} ${TSTAMP}" />
                    <attribute name="SVN-URL" value="${dist.revision}" />
			  	</section>
			</manifest>
		</jar>
		<antcall target="build_code_zip"></antcall>
	</target>

	<target name="build_code_zip" depends="compile">
<!--
		<echo> Building project installable zip : </echo>
		<zip destfile="${dist.dir}/WUSTLKey-src.zip">
			<fileset dir="${src.dir}" includes="**/*" />
		</zip>
-->
		<copy todir="${dist.dir}">
			<fileset dir="${src.dir}" includes="**/*" />
		</copy>
	</target>

	<target name="dist" depends="build_jar">

	</target>

	<!--ivy:retrieve related tags start here-->
			<property name="common.dir" location="${software.dir}/common" />
			<property name="target.dir" location="${software.dir}/target" />


			<property name="bda-utils.dir" location="${target.dir}/bda-utils" />
				<property name="project.properties.file" value="${software.dir}/build/project.properties" />
				<property file="${project.properties.file}" />
				<import file="${bda-utils.dir}/bda-build-utils-${bda.version}.xml" />


				<path id="bda-utils.classpath">
					<fileset dir="${bda-utils.dir}">
						<include name="**/*.jar" />
					</fileset>
				</path>
				<path id="ivy.classpath">
					<fileset dir="${target.dir}/lib">
						<include name="ivy-2.0.0.jar" />
					</fileset>
				</path>

				<taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="ivy.classpath" />
				<taskdef name="xmltask" classname="com.oopsconsultancy.xmltask.ant.XmlTask"  classpathref="bda-utils.classpath"/>
				<taskdef resource="net/sf/antcontrib/antcontrib.properties" classpathref="bda-utils.classpath"/>

			<property name="ivy.settings.file" location="${common.dir}/ivy/cbiit-ivy-settings.xml" />
					<target name="ivy-settings">
						<property name="ivy.dep.file" value="${common.dir}/bda-download/ivy-bda.xml"/>
						<ivy:settings file="${ivy.settings.file}"/>

					</target>
				<target name="retrieve-ivy-files" depends="ivy-settings"  description="Updates the local ivy repository">
					<ivy:resolve refresh="true" conf="app_lib"/>
					<ivy:retrieve pattern="${lib.dir}/[artifact]-[revision].[ext]" conf="app_lib" />

				</target>

			<!--ivy:retrieve related tags end here-->

</project>